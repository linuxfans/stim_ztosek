//////////////////////////////////////////////////////////////////////////
//ZtOS 核心 
//文件: ztos_core.h
//作者:	张鑫
//日期: [11/18/2005]
//////////////////////////////////////////////////////////////////////////

#ifndef __ZTOS_CORE_H
#define __ZTOS_CORE_H
#include "ztos_cpu.h"

//////////////////////////////////////////////////////////////////////////
//EXTREN宏定义　防止多重定义
//////////////////////////////////////////////////////////////////////////
#ifdef	__ZTOS_CORE_C
#define	EXTERN
#else
#define EXTERN	extern
#endif

//////////////////////////////////////////////////////////////////////////
//数据类型
//////////////////////////////////////////////////////////////////////////
typedef	UINT8	OS_PRI;
typedef	UINT8	OS_SEM;

//////////////////////////////////////////////////////////////////////////
//任务相关
//////////////////////////////////////////////////////////////////////////
#define	OS_TSK_MAXNUM	32			//最大任务数量（目前版本最高为32）
#define	OS_PRI_LOWEST	31			//最低优先级号
#define	OS_PRI_IDLE		31			//空任务优先级

//////////////////////////////////////////////////////////////////////////
//信号量相关
//////////////////////////////////////////////////////////////////////////
#define	OS_SEM_MAXNUM	16			//最大信号量数量

//////////////////////////////////////////////////////////////////////////
//任务控制块
//////////////////////////////////////////////////////////////////////////
typedef struct os_tcb
{
	OS_TSK_STK*		os_tcb_stk_ptr;	//任务堆栈指针
	OS_PRI			os_tcb_pri;		//任务优先级
	struct os_tcb*	os_tcb_nxt;		//链表指针
}OS_TCB;

//////////////////////////////////////////////////////////////////////////
//信号量控制块
//////////////////////////////////////////////////////////////////////////
typedef struct os_scb
{
	INT32			os_scb_cnt;		//信号量计数器
	INT32			os_scb_timer;	//信号量定时器
	OS_PRI			os_scb_wat_tsk;	//等待任务
	struct os_scb*	os_scb_nxt;		//链表指针
}OS_SCB;

//////////////////////////////////////////////////////////////////////////
//定义 用户任务工作模式 Thumb用户模式 允许IRQ FIQ
//  [8/15/2005]
//////////////////////////////////////////////////////////////////////////
#define USER_USING_MODE		0x30

//////////////////////////////////////////////////////////////////////////
//系统全局变量
//////////////////////////////////////////////////////////////////////////
EXTERN	UINT8	os_running;			//系统是否正在运行
EXTERN	UINT8	os_pri_flg;			//就绪优先级标志
EXTERN	UINT8	os_pri_rdy;			//就绪最高优先级任务优先级
EXTERN	UINT8	os_pri_cur;			//当前任务优先级

EXTERN	OS_TCB*	os_tcb_rdy;			//就绪最高优先级任务任务控制块
EXTERN	OS_TCB*	os_tcb_cur;			//当前任务任务控制块


EXTERN	OS_TCB	os_tcb_tbl[OS_TSK_MAXNUM];		//任务控制块表
EXTERN	OS_SCB	os_scb_tbl[OS_SEM_MAXNUM];		//信号量表

//////////////////////////////////////////////////////////////////////////
//声明系统函数
//////////////////////////////////////////////////////////////////////////
EXTERN	void	os_init();
EXTERN	void	os_start();
EXTERN	void	os_tsk_create(void (*tsk)(void *pd),void *pdata, 
							  OS_TSK_STK *ptos, OS_PRI pri);
EXTERN	void	os_tsk_sch();
EXTERN	void	os_tsk_idle(void *pd);
EXTERN	void	os_tcb_init(OS_PRI pri, OS_TSK_STK* ptos);
EXTERN	void	os_sem_init();
//EXTERN	void	os_sem_pn(OS_SEM sem_id, INT32 n);
EXTERN	void	os_sem_vn(OS_SEM sem_id, INT32 n);
 
EXTERN	INT32	os_sem_p(OS_SEM SemID, UINT32 timeout);
EXTERN	INT32	os_sem_try(OS_SEM SemID);
EXTERN	OS_TSK_STK	os_stk_idletsk[32];

#undef	EXTERN

#endif
